{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Unit/assets\\Script\\Unit\\Unit.js"],"names":["Emiter","require","cc","Class","extends","Component","properties","sprite","Sprite","valueLable","Label","unitValue","moveValue","_canMove","goTo","onLoad","node","destroyNode","_destroyNode","bind","moveUnit","_moveUnit","getUnitValue","_getUnitValue","setUnitValue","_setUnitValue","start","update","dt","destroy","log","vector2","time","tween","to","position","call","num","string","scale","easing"],"mappings":";;;;;;AAAA,IAAMA,SAASC,QAAQ,SAAR,CAAf;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,gBAAQL,GAAGM,MADH;AAERC,oBAAYP,GAAGQ,KAFP;AAGRC,mBAAW,CAHH;AAIRC,mBAAW,GAJH;AAKRC,kBAAU,IALF;AAMRC,cAAM;AANE,KAHP;;AAYL;;AAEAC,UAdK,oBAcI;AACL,aAAKC,IAAL,CAAUC,WAAV,GAAwB,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAxB;AACA,aAAKH,IAAL,CAAUI,QAAV,GAAqB,KAAKC,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAArB;AACA,aAAKH,IAAL,CAAUM,YAAV,GAAyB,KAAKC,aAAL,CAAmBJ,IAAnB,CAAwB,IAAxB,CAAzB;AACA,aAAKH,IAAL,CAAUQ,YAAV,GAAyB,KAAKC,aAAL,CAAmBN,IAAnB,CAAwB,IAAxB,CAAzB;AACH,KAnBI;AAqBLO,SArBK,mBAqBG,CAEP,CAvBI;AAyBLC,UAzBK,kBAyBEC,EAzBF,EAyBM,CAEV,CA3BI;AA6BLV,gBA7BK,0BA6BU;AACX,aAAKF,IAAL,CAAUC,WAAV,GAAwB,IAAxB;AACA,aAAKD,IAAL,CAAUI,QAAV,GAAqB,IAArB;AACA,aAAKJ,IAAL,CAAUM,YAAV,GAAyB,IAAzB;AACA,aAAKN,IAAL,CAAUQ,YAAV,GAAyB,IAAzB;AACA,aAAKR,IAAL,CAAUa,OAAV;AACA3B,WAAG4B,GAAH,CAAO,aAAP;AACH,KApCI;AAsCLT,aAtCK,qBAsCKU,OAtCL,EAsCc;AAAA;;AACf,YAAIC,OAAO,IAAX;AACA;AACA;AACA9B,WAAG+B,KAAH,CAAS,KAAKjB,IAAd,EACKkB,EADL,CACQF,IADR,EACc,EAAEG,UAAUJ,OAAZ,EADd,EAEKK,IAFL,CAEU,YAAM;AAAE,kBAAKvB,QAAL,GAAgB,IAAhB;AAAuB,SAFzC,EAGKa,KAHL;AAIH,KA9CI;AAgDLH,iBAhDK,2BAgDW;AACZ,eAAO,KAAKZ,SAAZ;AACH,KAlDI;AAmDLc,iBAnDK,yBAmDSY,GAnDT,EAmDc;AACf,aAAK5B,UAAL,CAAgB6B,MAAhB,GAAyBD,GAAzB;AACA,aAAK1B,SAAL,GAAiB0B,GAAjB;AACAnC,WAAG+B,KAAH,CAAS,KAAKjB,IAAd,EACKkB,EADL,CACQ,IADR,EACc,EAAEK,OAAO,GAAT,EADd,EAC8B,EAAEC,QAAQ,YAAV,EAD9B,EAEKN,EAFL,CAEQ,IAFR,EAEc,EAAEK,OAAO,CAAT,EAFd,EAGKb,KAHL;AAIH;AA1DI,CAAT","file":"Unit.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Unit","sourcesContent":["const Emiter = require('Emitter');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        sprite: cc.Sprite,\r\n        valueLable: cc.Label,\r\n        unitValue: 0,\r\n        moveValue: 200,\r\n        _canMove: true,\r\n        goTo: null,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.node.destroyNode = this._destroyNode.bind(this);\r\n        this.node.moveUnit = this._moveUnit.bind(this);\r\n        this.node.getUnitValue = this._getUnitValue.bind(this);\r\n        this.node.setUnitValue = this._setUnitValue.bind(this);\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    update(dt) {\r\n\r\n    },\r\n\r\n    _destroyNode() {\r\n        this.node.destroyNode = null;\r\n        this.node.moveUnit = null;\r\n        this.node.getUnitValue = null;\r\n        this.node.setUnitValue = null;\r\n        this.node.destroy();\r\n        cc.log('remove node');\r\n    },\r\n\r\n    _moveUnit(vector2) {\r\n        let time = 0.05;\r\n        // if (vector2.x != this.node.x) time = time * (Math.abs((vector2.x - this.node.x) / this.moveValue));\r\n        // if (vector2.y != this.node.y) time = time * (Math.abs((vector2.y - this.node.y) / this.moveValue));\r\n        cc.tween(this.node)\r\n            .to(time, { position: vector2 })\r\n            .call(() => { this._canMove = true; })\r\n            .start();\r\n    },\r\n\r\n    _getUnitValue() {\r\n        return this.unitValue;\r\n    },\r\n    _setUnitValue(num) {\r\n        this.valueLable.string = num;\r\n        this.unitValue = num;\r\n        cc.tween(this.node)\r\n            .to(0.05, { scale: 1.1 }, { easing: 'elasticOut' })\r\n            .to(0.05, { scale: 1 })\r\n            .start();\r\n    },\r\n});\r\n"]}