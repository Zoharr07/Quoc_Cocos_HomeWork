{"version":3,"sources":["../../../../../assets/Script/Unit/assets/Script/Unit/Unit.js"],"names":["Emiter","require","cc","Class","extends","Component","properties","sprite","Sprite","valueLable","Label","unitValue","moveValue","_canMove","goTo","onLoad","node","destroyNode","_destroyNode","bind","moveUnit","_moveUnit","getUnitValue","_getUnitValue","setUnitValue","_setUnitValue","destroy","vector2","time","tween","to","position","call","start","num","string","_changeColorSprite","scale","easing","color"],"mappings":"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","file":"Unit.js","sourceRoot":"../../../../../assets/Script/Unit","sourcesContent":["const Emiter = require('Emitter');\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        sprite: cc.Sprite,\n        valueLable: cc.Label,\n        unitValue: 0,\n        moveValue: 200,\n        _canMove: true,\n        goTo: null,\n    },\n\n    onLoad() {\n        this.node.destroyNode = this._destroyNode.bind(this);\n        this.node.moveUnit = this._moveUnit.bind(this);\n        this.node.getUnitValue = this._getUnitValue.bind(this);\n        this.node.setUnitValue = this._setUnitValue.bind(this);\n    },\n\n    _destroyNode() {\n        this.node.destroyNode = null;\n        this.node.moveUnit = null;\n        this.node.getUnitValue = null;\n        this.node.setUnitValue = null;\n        this.node.destroy();\n    },\n\n    _moveUnit(vector2) {\n        let time = 0.05;\n        // if (vector2.x != this.node.x) time = time * (Math.abs((vector2.x - this.node.x) / this.moveValue));\n        // if (vector2.y != this.node.y) time = time * (Math.abs((vector2.y - this.node.y) / this.moveValue));\n        cc.tween(this.node)\n            .to(time, { position: vector2 })\n            .call(() => { this._canMove = true; })\n            .start();\n    },\n\n    _getUnitValue() {\n        return this.unitValue;\n    },\n\n    _setUnitValue(num) {\n        this.valueLable.string = num;\n        this.unitValue = num;\n        this._changeColorSprite(num);\n        cc.tween(this.node)\n            .to(0.05, { scale: 1.1 }, { easing: 'elasticOut' })\n            .to(0.05, { scale: 1 })\n            .start();\n    },\n\n    _changeColorSprite(num) {\n        switch (num) {\n            case 2: this.sprite.node.color = cc.color(255, 255, 255, 255);\n                break;\n            case 4: this.sprite.node.color = cc.color(150, 200, 160, 255);\n                break;\n            case 8: this.sprite.node.color = cc.color(210, 90, 160, 255);\n                break;\n            case 16: this.sprite.node.color = cc.color(160, 100, 65, 255);\n                break;\n            case 32: this.sprite.node.color = cc.color(230, 115, 120, 255);\n                break;\n            case 64: this.sprite.node.color = cc.color(190, 75, 210, 255);\n                break;\n            case 128: this.sprite.node.color = cc.color(220, 160, 150, 255);\n                break;\n            case 256: this.sprite.node.color = cc.color(105, 195, 230, 255);\n                break;\n            case 512: this.sprite.node.color = cc.color(180, 230, 100, 255);\n                break;\n            case 1024: this.sprite.node.color = cc.color(220, 108, 170, 255);\n                break;\n            case 2048: this.sprite.node.color = cc.color(170, 35, 40, 255);\n                break;\n            case 4096: this.sprite.node.color = cc.color(140, 75, 40, 255);\n                break;\n            case 8192: this.sprite.node.color = cc.color(140, 75, 40, 255);\n                break;\n        }\n    },\n});\n"]}