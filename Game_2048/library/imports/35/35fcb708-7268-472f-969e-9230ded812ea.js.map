{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Controller/assets\\Script\\Controller\\GameController.js"],"names":["Emiter","require","cc","Class","extends","Component","properties","unitBG","Prefab","unitPrefabs","boardUnit","Node","nodeBG","_boardPosition","_boardUnitArgs","_row","_col","_distance","_maxObj","_canPress","_canInstanceUnit","onLoad","instance","addEvent","_startGameFunc","bind","systemEvent","on","SystemEvent","EventType","KEY_UP","onKeyUp","instanceBackgroundUnit","_instanceBoardArray","start","event","keyCode","macro","KEY","up","_moveUp","down","_moveDown","left","_moveLeft","right","_moveRight","instanceRandomUnit","log","unit","instantiate","randX","randY","randomXY","addChild","position","setUnitValue","randomValue","Math","floor","random","rand","_instanceUnit","tween","node","delay","call","i","rowBoard","j","unitPos","v2","push","_clearBoardGame","rowBoardArg","destroyNode","y","x","index","_getIndex","_moveUnitPosition","getUnitValue","_mergeUnit","currentX","currentY","indexX","indexY","temp","moveUnit","getType","sortType"],"mappings":"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","file":"GameController.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Controller","sourcesContent":["const Emiter = require('Emitter');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        unitBG: cc.Prefab,\r\n        unitPrefabs: cc.Prefab,\r\n        boardUnit: cc.Node,\r\n        nodeBG: cc.Node,\r\n        _boardPosition: [],\r\n        _boardUnitArgs: [],\r\n        _row: 4,\r\n        _col: 4,\r\n        _distance: 200,\r\n        _maxObj: 0,\r\n        _canPress: true,\r\n        _canInstanceUnit: false,\r\n\r\n\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        Emiter.instance.addEvent('startGame', this._startGameFunc.bind(this));\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n        this.instanceBackgroundUnit();\r\n        this._instanceBoardArray();\r\n    },\r\n\r\n    start() {\r\n    },\r\n\r\n    // update (dt) {},\r\n\r\n    onKeyUp: function (event) {\r\n        if (this._canPress == false) return;\r\n        this._canPress = false;\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.up:\r\n                this._moveUp();\r\n                break;\r\n            case cc.macro.KEY.down:\r\n                this._moveDown();\r\n                break;\r\n            case cc.macro.KEY.left:\r\n                this._moveLeft();\r\n                break;\r\n            case cc.macro.KEY.right:\r\n                this._moveRight();\r\n                break;\r\n        }\r\n    },\r\n\r\n    instanceRandomUnit() {\r\n        this._maxObj++;\r\n        if (this._maxObj > (this._row * this._col)) {\r\n            cc.log('overGame');\r\n            this._maxObj--;\r\n            return;\r\n        }\r\n        let unit = cc.instantiate(this.unitPrefabs);\r\n        let randX = 0;\r\n        let randY = 0;\r\n        randomXY();\r\n        while (this._boardUnitArgs[randX][randY] != null) randomXY();\r\n        this._boardUnitArgs[randX][randY] = unit;\r\n        this.boardUnit.addChild(unit);\r\n        unit.position = this._boardPosition[randX][randY];\r\n        unit.setUnitValue(randomValue());\r\n        cc.log(this._boardUnitArgs, 'add unit, total ', this._maxObj)\r\n\r\n        function randomXY() {\r\n            randX = Math.floor(Math.random() * 4);\r\n            randY = Math.floor(Math.random() * 4);\r\n        }\r\n        function randomValue() {\r\n            let rand = Math.random();\r\n            rand > 0.75 ? rand = 4 : rand = 2;\r\n            return rand;\r\n        }\r\n    },\r\n\r\n    _instanceUnit() {\r\n        cc.tween(this.node).delay(0.25).call(() => {\r\n            this._canPress = true;\r\n            if (this._canInstanceUnit == false) return;\r\n            this._canInstanceUnit = false;\r\n            this.instanceRandomUnit();\r\n        }).start();\r\n    },\r\n\r\n    instanceBackgroundUnit() {\r\n        for (let i = 1; i <= this._row; i++) {\r\n            let rowBoard = [];\r\n            for (let j = 1; j <= this._col; j++) {\r\n                let unit = cc.instantiate(this.unitBG);\r\n                let unitPos = cc.v2(((j - (this._col + 1) / 2) * this._distance), -((i - (this._row + 1) / 2) * this._distance))\r\n                unit.position = unitPos;\r\n                rowBoard.push(unitPos);\r\n                this.nodeBG.addChild(unit);\r\n            }\r\n            this._boardPosition.push(rowBoard);\r\n        }\r\n    },\r\n\r\n    _startGameFunc() {\r\n        this._clearBoardGame();\r\n        this.instanceRandomUnit();\r\n        this.instanceRandomUnit();\r\n    },\r\n\r\n    _instanceBoardArray() {\r\n        for (let i = 0; i < this._row; i++) {\r\n            let rowBoardArg = [];\r\n            for (let j = 0; j < this._col; j++) rowBoardArg.push(null);\r\n            this._boardUnitArgs.push(rowBoardArg);\r\n        }\r\n    },\r\n\r\n    _clearBoardGame() {\r\n        for (let i = 0; i < this._row; i++) {\r\n            for (let j = 0; j < this._col; j++) {\r\n                if (this._boardUnitArgs[i][j] != null) this._boardUnitArgs[i][j].destroyNode();\r\n                this._boardUnitArgs[i][j] = null;\r\n            }\r\n        }\r\n        this._maxObj = 0;\r\n    },\r\n\r\n\r\n    _moveUp() {\r\n        for (let y = 0; y < this._col; y++) {\r\n            for (let x = 0; x < this._row; x++) {\r\n                let index = this._getIndex(x, y, 'col', 'forward');\r\n                if (index == x) continue;\r\n                if (this._boardUnitArgs[x][y] == null) {\r\n                    this._moveUnitPosition(index, y, x, y);\r\n                    if (index != y) y--;\r\n                    continue;\r\n                }\r\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[index][y].getUnitValue()) {\r\n                    this._moveUnitPosition(index, y, x, y);\r\n                    this._mergeUnit(x, y, index, y);\r\n                    continue;\r\n                }\r\n                this._moveUnitPosition(index, y, x + 1, y);\r\n            }\r\n        }\r\n        this._instanceUnit();\r\n    },\r\n\r\n    _moveDown() {\r\n        for (let y = this._col - 1; y >= 0; y--) {\r\n            for (let x = this._row - 1; x >= 0; x--) {\r\n                let index = this._getIndex(x, y, 'col', 'backward');\r\n                if (index == x) continue;\r\n                if (this._boardUnitArgs[x][y] == null) {\r\n                    this._moveUnitPosition(index, y, x, y);\r\n                    if (index != y) y++;\r\n                    continue;\r\n                }\r\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[index][y].getUnitValue()) {\r\n                    this._moveUnitPosition(index, y, x, y);\r\n                    this._mergeUnit(x, y, index, y);\r\n                    continue;\r\n                }\r\n                this._moveUnitPosition(index, y, x - 1, y);\r\n            }\r\n        }\r\n        this._instanceUnit();\r\n    },\r\n\r\n    _moveLeft() {\r\n        for (let x = 0; x < this._row; x++) {\r\n            for (let y = 0; y < this._col; y++) {\r\n                cc.log('x', x, 'y', y)\r\n                let index = this._getIndex(x, y, 'row', 'forward');\r\n                if (index == y) continue;\r\n                if (this._boardUnitArgs[x][y] == null) {\r\n                    this._moveUnitPosition(x, index, x, y);\r\n                    if (index != y) y--;\r\n                    continue;\r\n                }\r\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[x][index].getUnitValue()) {\r\n                    this._moveUnitPosition(x, index, x, y);\r\n                    this._mergeUnit(x, y, x, index);\r\n                    continue;\r\n                }\r\n                this._moveUnitPosition(x, index, x, y + 1);\r\n            }\r\n        }\r\n        this._instanceUnit();\r\n    },\r\n\r\n    _moveRight() {\r\n        for (let x = this._row - 1; x >= 0; x--) {\r\n            for (let y = this._col - 1; y >= 0; y--) {\r\n                let index = this._getIndex(x, y, 'row', 'backward');\r\n                if (index == y) continue;\r\n                if (this._boardUnitArgs[x][y] == null) {\r\n                    this._moveUnitPosition(x, index, x, y);\r\n                    if (index != y) y++;\r\n                    continue;\r\n                }\r\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[x][index].getUnitValue()) {\r\n                    this._moveUnitPosition(x, index, x, y);\r\n                    this._mergeUnit(x, y, x, index);\r\n                    continue;\r\n                }\r\n                this._moveUnitPosition(x, index, x, y - 1);\r\n            }\r\n        }\r\n        this._instanceUnit();\r\n    },\r\n\r\n\r\n    _moveUnitPosition(currentX, currentY, indexX, indexY) {\r\n        let temp = this._boardUnitArgs[currentX][currentY];\r\n        this._boardUnitArgs[currentX][currentY] = this._boardUnitArgs[indexX][indexY];\r\n        this._boardUnitArgs[indexX][indexY] = temp;\r\n        this._boardUnitArgs[indexX][indexY].moveUnit(this._boardPosition[indexX][indexY]);\r\n        this._canInstanceUnit = true;\r\n    },\r\n\r\n    _mergeUnit(x, y, indexX, indexY) {\r\n        this._boardUnitArgs[x][y].setUnitValue(this._boardUnitArgs[x][y].getUnitValue() * 2);\r\n        this._boardUnitArgs[indexX][indexY].destroyNode();\r\n        this._boardUnitArgs[indexX][indexY] = null;\r\n        this._maxObj--;\r\n    },\r\n\r\n    _getIndex(x, y, getType, sortType) {\r\n        let index = null;\r\n        if (getType == 'row') {\r\n            index = y;\r\n            if (sortType == 'forward') for (let i = this._col - 1; i > y; i--) {\r\n                if (this._boardUnitArgs[x][i] != null) {\r\n                    index = i;\r\n                }\r\n            }\r\n            if (sortType == 'backward') for (let i = 0; i < y; i++) {\r\n                if (this._boardUnitArgs[x][i] != null) {\r\n                    index = i;\r\n                }\r\n            }\r\n        }\r\n        if (getType == 'col') {\r\n            index = x;\r\n            if (sortType == 'forward') for (let i = this._row - 1; i > x; i--) {\r\n                if (this._boardUnitArgs[i][y] != null) {\r\n                    index = i;\r\n                }\r\n            }\r\n            if (sortType == 'backward') for (let i = 0; i < x; i++) {\r\n                if (this._boardUnitArgs[i][y] != null) {\r\n                    index = i;\r\n                }\r\n            }\r\n        }\r\n        cc.log(index)\r\n        return index;\r\n    },\r\n});\r\n"]}