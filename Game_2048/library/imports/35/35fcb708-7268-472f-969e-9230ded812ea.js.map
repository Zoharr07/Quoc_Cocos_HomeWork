{"version":3,"sources":["../../../../../assets/Script/Controller/assets/Script/Controller/GameController.js"],"names":["Emiter","require","cc","Class","extends","Component","properties","unitBG","Prefab","unitPrefabs","boardUnit","Node","nodeBG","_boardPosition","_boardUnitArgs","_row","_col","_distance","_maxObj","_canPress","onLoad","instance","addEvent","_startGameFunc","bind","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","instanceBackgroundUnit","_instanceBoardArray","start","event","keyCode","macro","KEY","up","_moveUp","down","_moveDown","left","_moveLeft","right","_moveRight","tween","node","delay","call","instanceRandomUnit","log","unit","instantiate","randX","randY","randomXY","addChild","position","setUnitValue","randomValue","to","scale","easing","Math","floor","random","rand","i","rowBoard","j","unitPos","v2","push","_clearBoardGame","rowBoardArg","destroyNode","y","x","_movePositionX","index","_movePositionY","temp","moveUnit"],"mappings":"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","file":"GameController.js","sourceRoot":"../../../../../assets/Script/Controller","sourcesContent":["const Emiter = require('Emitter');\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        unitBG: cc.Prefab,\n        unitPrefabs: cc.Prefab,\n        boardUnit: cc.Node,\n        nodeBG: cc.Node,\n        _boardPosition: [],\n        _boardUnitArgs: [],\n        _row: 4,\n        _col: 4,\n        _distance: 200,\n        _maxObj: 0,\n        _canPress: true,\n\n\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        Emiter.instance.addEvent('startGame', this._startGameFunc.bind(this));\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        this.instanceBackgroundUnit();\n        this._instanceBoardArray();\n    },\n\n    start() {\n    },\n\n    // update (dt) {},\n\n    onKeyDown: function (event) {\n        if (this._canPress == false) return;\n        this._canPress = false;\n        switch (event.keyCode) {\n            case cc.macro.KEY.up:\n                this._moveUp();\n                break;\n            case cc.macro.KEY.down:\n                this._moveDown();\n                break;\n            case cc.macro.KEY.left:\n                this._moveLeft();\n                break;\n            case cc.macro.KEY.right:\n                this._moveRight();\n                break;\n        }\n        //all even call this func -> need check keyinput!!!\n        if (event.keyCode == cc.macro.KEY.up || event.keyCode == cc.macro.KEY.down ||\n            event.keyCode == cc.macro.KEY.left || event.keyCode == cc.macro.KEY.right) {\n            cc.tween(this.node).delay(0.25).call(() => {\n                this.instanceRandomUnit();\n                this._canPress = true;\n            }).start();\n        }\n\n    },\n\n    instanceRandomUnit() {\n        this._maxObj++;\n        if (this._maxObj > (this._row * this._col)) {\n            cc.log('overGame');\n            this._maxObj--;\n            return;\n        }\n        let unit = cc.instantiate(this.unitPrefabs);\n        let randX = 0;\n        let randY = 0;\n        randomXY();\n        while (this._boardUnitArgs[randX][randY] != null) randomXY();\n        this._boardUnitArgs[randX][randY] = unit;\n        this.boardUnit.addChild(unit);\n        unit.position = this._boardPosition[randX][randY];\n        unit.setUnitValue(randomValue());\n        cc.log(this._boardUnitArgs, 'add unit, total ', this._maxObj)\n\n        cc.tween(unit)\n            .to(0.1, { scale: 1.1 }, { easing: 'elasticOut' })\n            .to(0.1, { scale: 1 })\n            .start();\n\n        function randomXY() {\n            randX = Math.floor(Math.random() * 4);\n            randY = Math.floor(Math.random() * 4);\n        }\n        function randomValue() {\n            let rand = Math.random();\n            rand > 0.75 ? rand = 4 : rand = 2;\n            // if (this._maxObj < 3) rand = 2;\n            return rand;\n        }\n    },\n\n    instanceBackgroundUnit() {\n        for (let i = 1; i <= this._row; i++) {\n            let rowBoard = [];\n            for (let j = 1; j <= this._col; j++) {\n                let unit = cc.instantiate(this.unitBG);\n                let unitPos = cc.v2(((j - (this._col + 1) / 2) * this._distance), -((i - (this._row + 1) / 2) * this._distance))\n                unit.position = unitPos;\n                rowBoard.push(unitPos);\n                this.nodeBG.addChild(unit);\n            }\n            this._boardPosition.push(rowBoard);\n        }\n    },\n\n    _startGameFunc() {\n        this._clearBoardGame();\n        this.instanceRandomUnit();\n        this.instanceRandomUnit();\n    },\n\n    _instanceBoardArray() {\n        for (let i = 0; i < this._row; i++) {\n            let rowBoardArg = [];\n            for (let j = 0; j < this._col; j++) rowBoardArg.push(null);\n            this._boardUnitArgs.push(rowBoardArg);\n        }\n    },\n\n    _clearBoardGame() {\n        for (let i = 0; i < this._row; i++) {\n            for (let j = 0; j < this._col; j++) {\n                if (this._boardUnitArgs[i][j] != null) this._boardUnitArgs[i][j].destroyNode();\n                this._boardUnitArgs[i][j] = null;\n            }\n        }\n        this._maxObj = 0;\n    },\n\n\n    _moveUp() {\n        for (let y = 0; y < this._col; y++) {\n            for (let x = 0; x < this._row; x++) {\n                if (this._boardUnitArgs[x][y] == null) continue;\n                if (x == 0) continue;\n                if (this._boardUnitArgs[0][y] == null) {\n                    this._movePositionX(x, y, 0)\n                } else {\n                    let index = 0;\n                    for (let i = 0; i < x; i++) {\n                        if (this._boardUnitArgs[i][y] != null) index = i + 1;\n                    }\n                    if (index == x) continue;\n                    if (this._boardUnitArgs[index][y] == null) this._movePositionX(x, y, index);\n                }\n            }\n        }\n    },\n\n    _moveDown() {\n        for (let y = this._col - 1; y >= 0; y--) {\n            for (let x = this._row - 1; x >= 0; x--) {\n                if (this._boardUnitArgs[x][y] == null) continue;\n                if (x == this._row - 1) continue;\n                if (this._boardUnitArgs[this._row - 1][y] == null) {\n                    this._movePositionX(x, y, this._row - 1)\n                } else {\n                    let index = this._row - 1;\n                    for (let i = this._row - 1; i > x; i--) {\n                        if (this._boardUnitArgs[i][y] != null) index = i - 1;\n                    }\n                    if (index == x) continue;\n                    if (this._boardUnitArgs[index][y] == null) this._movePositionX(x, y, index);\n                }\n            }\n        }\n    },\n\n    _moveLeft() {\n        for (let x = 0; x < this._row; x++) {\n            for (let y = 0; y < this._col; y++) {\n                if (this._boardUnitArgs[x][y] == null) continue;\n                if (y == 0) continue;\n                if (this._boardUnitArgs[x][0] == null) {\n                    this._movePositionY(x, y, 0)\n                } else {\n                    let index = 0;\n                    for (let i = 0; i < y; i++) {\n                        if (this._boardUnitArgs[x][i] != null) index = i + 1;\n                    }\n                    if (index == y) continue;\n                    if (this._boardUnitArgs[x][index] == null) this._movePositionY(x, y, index);\n                }\n            }\n        }\n    },\n\n    _moveRight() {\n        for (let x = this._row - 1; x >= 0; x--) {\n            for (let y = this._col - 1; y >= 0; y--) {\n                if (this._boardUnitArgs[x][y] == null) continue;\n                if (y == this._col - 1) continue;\n                if (this._boardUnitArgs[x][this._col - 1] == null) {\n                    this._movePositionY(x, y, this._col - 1)\n                } else {\n                    let index = this._col - 1;\n                    for (let i = this._col - 1; i > y; i--) {\n                        if (this._boardUnitArgs[x][i] != null) index = i - 1;\n                    }\n                    if (index == y) continue;\n                    if (this._boardUnitArgs[x][index] == null) this._movePositionY(x, y, index);\n                }\n            }\n        }\n    },\n\n\n    _movePositionX(x, y, index) {\n        cc.log(x, y, index);\n        let temp = this._boardUnitArgs[x][y];\n        this._boardUnitArgs[x][y] = this._boardUnitArgs[index][y];\n        this._boardUnitArgs[index][y] = temp;\n        this._boardUnitArgs[index][y].moveUnit(this._boardPosition[index][y]);\n    },\n\n    _movePositionY(x, y, index) {\n        cc.log(x, y, index);\n        let temp = this._boardUnitArgs[x][y];\n        this._boardUnitArgs[x][y] = this._boardUnitArgs[x][index];\n        this._boardUnitArgs[x][index] = temp;\n        this._boardUnitArgs[x][index].moveUnit(this._boardPosition[x][index]);\n    },\n\n\n});\n"]}