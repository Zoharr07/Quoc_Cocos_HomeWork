{"version":3,"sources":["../../../../../assets/Script/Controller/assets/Script/Controller/GameController.js"],"names":["Emiter","require","cc","Class","extends","Component","properties","unitBG","Prefab","unitPrefabs","boardUnit","Node","nodeBG","scoreTotal","Label","bestScore","_boardPosition","_boardUnitArgs","_row","_col","_distance","_maxObj","_canPress","_canInstanceUnit","onLoad","instance","addEvent","_startGameFunc","bind","systemEvent","on","SystemEvent","EventType","KEY_UP","onKeyUp","instanceBackgroundUnit","_instanceBoardArray","_clearBoardGame","event","keyCode","macro","KEY","up","_moveUp","down","_moveDown","left","_moveLeft","right","_moveRight","instanceRandomUnit","randX","randY","randomXY","unit","instantiate","addChild","position","setUnitValue","randomValue","Math","floor","random","rand","_instanceUnit","emit","tween","node","delay","call","_updateBestScore","log","start","i","rowBoard","j","unitPos","v2","push","rowBoardArg","destroyNode","_resetScore","y","x","index","_getIndex","_moveUnitPosition","getUnitValue","_mergeUnit","currentX","currentY","indexX","indexY","temp","moveUnit","_addScore","getType","sortType","score","string","sys","localStorage","getItem","setItem"],"mappings":"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","file":"GameController.js","sourceRoot":"../../../../../assets/Script/Controller","sourcesContent":["const Emiter = require('Emitter');\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        unitBG: cc.Prefab,\n        unitPrefabs: cc.Prefab,\n        boardUnit: cc.Node,\n        nodeBG: cc.Node,\n        scoreTotal: cc.Label,\n        bestScore: cc.Label,\n        _boardPosition: [],\n        _boardUnitArgs: [],\n        _row: 4,\n        _col: 4,\n        _distance: 200,\n        _maxObj: 0,\n        _canPress: true,\n        _canInstanceUnit: false,\n    },\n\n    onLoad() {\n        Emiter.instance.addEvent('startGame', this._startGameFunc.bind(this));\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n        this.instanceBackgroundUnit();\n        this._instanceBoardArray();\n        this._clearBoardGame();\n    },\n\n    onKeyUp: function (event) {\n        if (this._canPress == false) return;\n        this._canPress = false;\n        switch (event.keyCode) {\n            case cc.macro.KEY.up: this._moveUp();\n                break;\n            case cc.macro.KEY.down: this._moveDown();\n                break;\n            case cc.macro.KEY.left: this._moveLeft();\n                break;\n            case cc.macro.KEY.right: this._moveRight();\n                break;\n        }\n    },\n\n    instanceRandomUnit() {\n        this._maxObj++;\n        if (this._maxObj > (this._row * this._col)) return;\n        let randX = 0;\n        let randY = 0;\n        while (this._boardUnitArgs[randX][randY] != null) randomXY();\n        let unit = cc.instantiate(this.unitPrefabs);\n        this._boardUnitArgs[randX][randY] = unit;\n        this.boardUnit.addChild(unit);\n        unit.position = this._boardPosition[randX][randY];\n        unit.setUnitValue(randomValue());\n\n        function randomXY() {\n            randX = Math.floor(Math.random() * 4);\n            randY = Math.floor(Math.random() * 4);\n        }\n        function randomValue() {\n            let rand = Math.random();\n            rand > 0.8 ? rand = 4 : rand = 2;\n            return rand;\n        }\n    },\n\n    _instanceUnit() {\n        Emiter.instance.emit('playSoundSlide');\n        cc.tween(this.node).delay(0.3).call(() => {\n            this._canPress = true;\n            if (this._maxObj >= 16 && this._canInstanceUnit == false) {\n                this._updateBestScore();\n                cc.log('end Game');\n            }\n            if (this._canInstanceUnit == false) return;\n            this._canInstanceUnit = false;\n            this.instanceRandomUnit();\n        }).start();\n    },\n\n    instanceBackgroundUnit() {\n        for (let i = 1; i <= this._row; i++) {\n            let rowBoard = [];\n            for (let j = 1; j <= this._col; j++) {\n                let unit = cc.instantiate(this.unitBG);\n                let unitPos = cc.v2(((j - (this._col + 1) / 2) * this._distance), -((i - (this._row + 1) / 2) * this._distance))\n                unit.position = unitPos;\n                rowBoard.push(unitPos);\n                this.nodeBG.addChild(unit);\n            }\n            this._boardPosition.push(rowBoard);\n        }\n    },\n\n    _startGameFunc() {\n        this._clearBoardGame();\n        this.instanceRandomUnit();\n        this.instanceRandomUnit();\n    },\n\n    _instanceBoardArray() {\n        for (let i = 0; i < this._row; i++) {\n            let rowBoardArg = [];\n            for (let j = 0; j < this._col; j++) rowBoardArg.push(null);\n            this._boardUnitArgs.push(rowBoardArg);\n        }\n    },\n\n    _clearBoardGame() {\n        for (let i = 0; i < this._row; i++) {\n            for (let j = 0; j < this._col; j++) {\n                if (this._boardUnitArgs[i][j] != null) this._boardUnitArgs[i][j].destroyNode();\n                this._boardUnitArgs[i][j] = null;\n            }\n        }\n        this._maxObj = 0;\n        this._resetScore();\n    },\n\n\n    _moveUp() {\n        for (let y = 0; y < this._col; y++) {\n            for (let x = 0; x < this._row; x++) {\n                let index = this._getIndex(x, y, 'col', 'forward');\n                if (index == x) continue;\n                if (this._boardUnitArgs[x][y] == null) {\n                    this._moveUnitPosition(index, y, x, y);\n                    if (index != y) y--;\n                    continue;\n                }\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[index][y].getUnitValue()) {\n                    this._moveUnitPosition(index, y, x, y);\n                    this._mergeUnit(x, y, index, y);\n                    continue;\n                }\n                this._moveUnitPosition(index, y, x + 1, y);\n            }\n        }\n        this._instanceUnit();\n    },\n\n    _moveDown() {\n        for (let y = this._col - 1; y >= 0; y--) {\n            for (let x = this._row - 1; x >= 0; x--) {\n                let index = this._getIndex(x, y, 'col', 'backward');\n                if (index == x) continue;\n                if (this._boardUnitArgs[x][y] == null) {\n                    this._moveUnitPosition(index, y, x, y);\n                    if (index != y) y++;\n                    continue;\n                }\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[index][y].getUnitValue()) {\n                    this._moveUnitPosition(index, y, x, y);\n                    this._mergeUnit(x, y, index, y);\n                    continue;\n                }\n                this._moveUnitPosition(index, y, x - 1, y);\n            }\n        }\n        this._instanceUnit();\n    },\n\n    _moveLeft() {\n        for (let x = 0; x < this._row; x++) {\n            for (let y = 0; y < this._col; y++) {\n                let index = this._getIndex(x, y, 'row', 'forward');\n                if (index == y) continue;\n                if (this._boardUnitArgs[x][y] == null) {\n                    this._moveUnitPosition(x, index, x, y);\n                    if (index != y) y--;\n                    continue;\n                }\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[x][index].getUnitValue()) {\n                    this._moveUnitPosition(x, index, x, y);\n                    this._mergeUnit(x, y, x, index);\n                    continue;\n                }\n                this._moveUnitPosition(x, index, x, y + 1);\n            }\n        }\n        this._instanceUnit();\n    },\n\n    _moveRight() {\n        for (let x = this._row - 1; x >= 0; x--) {\n            for (let y = this._col - 1; y >= 0; y--) {\n                let index = this._getIndex(x, y, 'row', 'backward');\n                if (index == y) continue;\n                if (this._boardUnitArgs[x][y] == null) {\n                    this._moveUnitPosition(x, index, x, y);\n                    if (index != y) y++;\n                    continue;\n                }\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[x][index].getUnitValue()) {\n                    this._moveUnitPosition(x, index, x, y);\n                    this._mergeUnit(x, y, x, index);\n                    continue;\n                }\n                this._moveUnitPosition(x, index, x, y - 1);\n            }\n        }\n        this._instanceUnit();\n    },\n\n    _moveUnitPosition(currentX, currentY, indexX, indexY) {\n        if (currentX == indexX && currentY == indexY) return;\n        let temp = this._boardUnitArgs[currentX][currentY];\n        this._boardUnitArgs[currentX][currentY] = this._boardUnitArgs[indexX][indexY];\n        this._boardUnitArgs[indexX][indexY] = temp;\n        this._boardUnitArgs[indexX][indexY].moveUnit(this._boardPosition[indexX][indexY]);\n        this._canInstanceUnit = true;\n    },\n\n    _mergeUnit(x, y, indexX, indexY) {\n        Emiter.instance.emit('playSoundAward');\n        this._boardUnitArgs[x][y].setUnitValue(this._boardUnitArgs[x][y].getUnitValue() * 2);\n        this._boardUnitArgs[indexX][indexY].destroyNode();\n        this._boardUnitArgs[indexX][indexY] = null;\n        this._addScore(this._boardUnitArgs[x][y].getUnitValue());\n        this._maxObj--;\n    },\n\n    _getIndex(x, y, getType, sortType) {\n        let index = null;\n        if (getType == 'row') {\n            index = y;\n            if (sortType == 'forward')\n                for (let i = this._col - 1; i > y; i--) {\n                    if (this._boardUnitArgs[x][i] != null) index = i;\n                }\n            if (sortType == 'backward')\n                for (let i = 0; i < y; i++) {\n                    if (this._boardUnitArgs[x][i] != null) index = i;\n                }\n        }\n        if (getType == 'col') {\n            index = x;\n            if (sortType == 'forward')\n                for (let i = this._row - 1; i > x; i--) {\n                    if (this._boardUnitArgs[i][y] != null) index = i;\n                }\n            if (sortType == 'backward')\n                for (let i = 0; i < x; i++) {\n                    if (this._boardUnitArgs[i][y] != null) index = i;\n                }\n        }\n        return index;\n    },\n\n    _addScore(score) {\n        this.scoreTotal.string = (+score) + (+this.scoreTotal.string);\n    },\n\n    _resetScore() {\n        this.scoreTotal.string = 0;\n        if (cc.sys.localStorage.getItem('BestScore')) {\n            this.bestScore.string = cc.sys.localStorage.getItem('BestScore');\n            return;\n        }\n        this.bestScore.string = 0;\n    },\n\n    _updateBestScore() {\n        if ((+this.scoreTotal.string) > (+this.bestScore.string)) {\n            this.bestScore.string = this.scoreTotal.string;\n            cc.sys.localStorage.setItem('BestScore', (+this.bestScore.string));\n        }\n    },\n});\n"]}