{"version":3,"sources":["../../../../../assets/Script/Events/assets/Script/Events/Emitter.js"],"names":["emiter","require","cc","Class","extends","Component","properties","start"],"mappings":";;;;;;AAAA,IAAIA,SAASC,QAAQ,QAAR,CAAb;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,KAHP;;AAqBL;;AAEA;;AAEAC,SAzBK,mBAyBG,CAEP;AA3BI;;AA6BL;AA7BJ","file":"Emitter.js","sourceRoot":"../../../../../assets/Script/Events","sourcesContent":["let emiter = require('Events');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start() {\n\n    },\n\n    // update (dt) {},\n});\n"]}