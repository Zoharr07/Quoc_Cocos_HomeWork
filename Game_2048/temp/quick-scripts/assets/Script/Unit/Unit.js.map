{"version":3,"sources":["Unit.js"],"names":["Emiter","require","cc","Class","extends","Component","properties","sprite","Sprite","valueLable","Label","value","Number","moveValue","_canMove","goTo","onLoad","_goTo","bind","instance","addEvent","node","destroyNode","_destroyNode","moveUp","_moveUp","start","update","dt","direct","x","y","log","_movePosition","tween","by","position","v2","call","removeEvent","destroy"],"mappings":";;;;;;AAAA,IAAMA,SAASC,QAAQ,SAAR,CAAf;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,gBAAQL,GAAGM,MADH;AAERC,oBAAYP,GAAGQ,KAFP;AAGRC,eAAOC,MAHC;AAIRC,mBAAW,GAJH;AAKRC,kBAAU,IALF;AAMRC,cAAM;AANE,KAHP;;AAYL;;AAEAC,UAdK,oBAcI;AACL,aAAKD,IAAL,GAAY,KAAKE,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAZ;AACAlB,eAAOmB,QAAP,CAAgBC,QAAhB,CAAyB,UAAzB,EAAqC,KAAKL,IAA1C;AACA,aAAKM,IAAL,CAAUC,WAAV,GAAwB,KAAKC,YAAL,CAAkBL,IAAlB,CAAuB,IAAvB,CAAxB;;AAEA,aAAKG,IAAL,CAAUG,MAAV,GAAmB,KAAKC,OAAL,CAAaP,IAAb,CAAkB,IAAlB,CAAnB;AACH,KApBI;AAsBLQ,SAtBK,mBAsBG,CAEP,CAxBI;AA0BLC,UA1BK,kBA0BEC,EA1BF,EA0BM,CAEV,CA5BI;AA6BLX,SA7BK,iBA6BCY,MA7BD,EA6BS;AACV;;AAEA;AACA,YAAK,KAAKR,IAAL,CAAUS,CAAV,IAAe,CAAC,GAAhB,IAAuBD,UAAU,MAAlC,IAA8C,KAAKR,IAAL,CAAUS,CAAV,IAAe,GAAf,IAAsBD,UAAU,OAA9E,IACC,KAAKR,IAAL,CAAUU,CAAV,IAAe,CAAC,GAAhB,IAAuBF,UAAU,MADlC,IAC8C,KAAKR,IAAL,CAAUU,CAAV,IAAe,GAAf,IAAsBF,UAAU,IADlF,EACyF;AACrF3B,eAAG8B,GAAH,CAAO,eAAP,EAAwB,KAAKX,IAAL,CAAUS,CAAlC,EAAqC,KAAKT,IAAL,CAAUU,CAA/C,EAAkDF,MAAlD;AACA;AACH;AACD,YAAI,KAAKf,QAAL,IAAiB,KAArB,EAA4B;AAC5B,aAAKA,QAAL,GAAgB,KAAhB;AACAZ,WAAG8B,GAAH,CAAO,YAAP,EAAqBH,MAArB;AACA,YAAIA,UAAU,MAAd,EAAsB;AAClB,iBAAKI,aAAL,CAAmB,CAAC,KAAKpB,SAAzB,EAAoC,CAApC;AACH;AACD,YAAIgB,UAAU,OAAd,EAAuB;AACnB,iBAAKI,aAAL,CAAmB,KAAKpB,SAAxB,EAAmC,CAAnC;AACH;AACD;AACA;AACA;AACA,YAAIgB,UAAU,MAAd,EAAsB;AAClB,iBAAKI,aAAL,CAAmB,CAAnB,EAAsB,CAAC,KAAKpB,SAA5B;AACH;AAEJ,KAtDI;AAwDLoB,iBAxDK,yBAwDSH,CAxDT,EAwDYC,CAxDZ,EAwDe;AAAA;;AAChB7B,WAAGgC,KAAH,CAAS,KAAKb,IAAd,EACKc,EADL,CACQ,IADR,EACc,EAAEC,UAAUlC,GAAGmC,EAAH,CAAMP,CAAN,EAASC,CAAT,CAAZ,EADd,EAEKO,IAFL,CAEU,YAAM;AACR,kBAAKxB,QAAL,GAAgB,IAAhB;AACAZ,eAAG8B,GAAH,CAAO,MAAKX,IAAL,CAAUS,CAAjB,EAAoB,MAAKT,IAAL,CAAUU,CAA9B;AACH,SALL,EAMKL,KANL;AAOH,KAhEI;AAiELH,gBAjEK,0BAiEU;AACXvB,eAAOmB,QAAP,CAAgBoB,WAAhB,CAA4B,UAA5B,EAAwC,KAAKxB,IAA7C;AACA,aAAKM,IAAL,CAAUmB,OAAV;AACAtC,WAAG8B,GAAH,CAAO,aAAP;AACH,KArEI;AAuELP,WAvEK,qBAuEK;AACN,aAAKQ,aAAL,CAAmB,CAAnB,EAAsB,KAAKpB,SAA3B;AACH;AAzEI,CAAT","file":"Unit.js","sourceRoot":"../../../../../assets/Script/Unit","sourcesContent":["const Emiter = require('Emitter');\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        sprite: cc.Sprite,\n        valueLable: cc.Label,\n        value: Number,\n        moveValue: 200,\n        _canMove: true,\n        goTo: null,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        this.goTo = this._goTo.bind(this);\n        Emiter.instance.addEvent('moveunit', this.goTo);\n        this.node.destroyNode = this._destroyNode.bind(this);\n\n        this.node.moveUp = this._moveUp.bind(this);\n    },\n\n    start() {\n\n    },\n\n    update(dt) {\n\n    },\n    _goTo(direct) {\n        // while () { \n\n        // }\n        if ((this.node.x <= -300 && direct == 'left') || (this.node.x >= 300 && direct == 'right') ||\n            (this.node.y <= -300 && direct == 'down') || (this.node.y >= 300 && direct == 'up')) {\n            cc.log(\"can't move!!!\", this.node.x, this.node.y, direct);\n            return;\n        }\n        if (this._canMove == false) return;\n        this._canMove = false;\n        cc.log('unit move ', direct);\n        if (direct == 'left') {\n            this._movePosition(-this.moveValue, 0);\n        }\n        if (direct == 'right') {\n            this._movePosition(this.moveValue, 0);\n        }\n        // if (direct == 'up') {\n        //     this._movePosition(0, this.moveValue);\n        // } \n        if (direct == 'down') {\n            this._movePosition(0, -this.moveValue);\n        }\n\n    },\n\n    _movePosition(x, y) {\n        cc.tween(this.node)\n            .by(0.15, { position: cc.v2(x, y) })\n            .call(() => {\n                this._canMove = true;\n                cc.log(this.node.x, this.node.y);\n            })\n            .start();\n    },\n    _destroyNode() {\n        Emiter.instance.removeEvent('moveunit', this.goTo);\n        this.node.destroy();\n        cc.log('remove node');\n    },\n\n    _moveUp() {\n        this._movePosition(0, this.moveValue);\n    },\n});\n"]}