{"version":3,"sources":["GameController.js"],"names":["Emiter","require","cc","Class","extends","Component","properties","unitBG","Prefab","unitPrefabs","boardUnit","Node","nodeBG","scoreTotal","Label","bestScore","_boardPosition","_boardUnitArgs","_row","_col","_distance","_maxObj","_canMoveBoard","_canInstanceUnit","_winPoint","_playOverPoint","onLoad","instance","addEvent","_startGameFunc","bind","_continuePlayOverPoint","_moveUp","_moveDown","_moveLeft","_moveRight","_init","instanceBackgroundUnit","_instanceBoardArray","_clearBoardGame","instanceRandomUnit","randX","randY","randomXY","unit","instantiate","addChild","position","setUnitValue","randomValue","Math","floor","random","rand","_instanceUnit","tween","node","delay","call","emit","string","log","start","i","rowBoard","j","unitPos","v2","push","rowBoardArg","destroyNode","_resetScore","y","x","index","_getIndex","_moveUnitPosition","getUnitValue","_mergeUnit","currentX","currentY","indexX","indexY","temp","moveUnit","unitPoint","_addScore","getType","sortType","score","_updateBestScore","sys","localStorage","getItem","setItem"],"mappings":"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","file":"GameController.js","sourceRoot":"../../../../../assets/Script/Controller","sourcesContent":["const Emiter = require('Emitter');\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        unitBG: cc.Prefab,\n        unitPrefabs: cc.Prefab,\n        boardUnit: cc.Node,\n        nodeBG: cc.Node,\n        scoreTotal: cc.Label,\n        bestScore: cc.Label,\n        _boardPosition: [],\n        _boardUnitArgs: [],\n        _row: 4,\n        _col: 4,\n        _distance: 200,\n        _maxObj: 0,\n        _canMoveBoard: true,\n        _canInstanceUnit: false,\n        _winPoint: 0,\n        _playOverPoint: false,\n    },\n\n    onLoad() {\n        Emiter.instance.addEvent('startGame', this._startGameFunc.bind(this));\n        Emiter.instance.addEvent('continuePlayOverPoint', this._continuePlayOverPoint.bind(this));\n        Emiter.instance.addEvent('moveUp', this._moveUp.bind(this));\n        Emiter.instance.addEvent('moveDown', this._moveDown.bind(this));\n        Emiter.instance.addEvent('moveLeft', this._moveLeft.bind(this));\n        Emiter.instance.addEvent('moveRight', this._moveRight.bind(this));\n        this._init();\n    },\n\n    _init() {\n        this.instanceBackgroundUnit();\n        this._instanceBoardArray();\n        this._clearBoardGame();\n        this._winPoint = 128;\n    },\n\n    instanceRandomUnit() {\n        this._maxObj++;\n        if (this._maxObj > (this._row * this._col)) return;\n        let randX = 0;\n        let randY = 0;\n        randomXY();\n        while (this._boardUnitArgs[randX][randY] != null) randomXY();\n        let unit = cc.instantiate(this.unitPrefabs);\n        this._boardUnitArgs[randX][randY] = unit;\n        this.boardUnit.addChild(unit);\n        unit.position = this._boardPosition[randX][randY];\n        unit.setUnitValue(randomValue());\n        this._canMoveBoard = true;\n\n        function randomXY() {\n            randX = Math.floor(Math.random() * 4);\n            randY = Math.floor(Math.random() * 4);\n        }\n        function randomValue() {\n            let rand = Math.random();\n            rand > 0.5 ? rand = 4 : rand = 2;\n            return rand;\n        }\n    },\n\n    _instanceUnit() {\n        cc.tween(this.node).delay(0.08).call(() => {\n            if (this._maxObj >= 16 && this._canInstanceUnit == false) {\n                Emiter.instance.emit('loseGame', this.scoreTotal.string);\n                cc.log('end Game');\n            }\n            if (this._canInstanceUnit == false) {\n                this._canMoveBoard = true;\n                return;\n            }\n            this._canInstanceUnit = false;\n            Emiter.instance.emit('playSoundSlide');\n            this.instanceRandomUnit();\n        }).start();\n    },\n\n    instanceBackgroundUnit() {\n        for (let i = 1; i <= this._row; i++) {\n            let rowBoard = [];\n            for (let j = 1; j <= this._col; j++) {\n                let unit = cc.instantiate(this.unitBG);\n                let unitPos = cc.v2(((j - (this._col + 1) / 2) * this._distance), -((i - (this._row + 1) / 2) * this._distance))\n                unit.position = unitPos;\n                rowBoard.push(unitPos);\n                this.nodeBG.addChild(unit);\n            }\n            this._boardPosition.push(rowBoard);\n        }\n    },\n\n    _startGameFunc() {\n        Emiter.instance.emit('playSoundClick');\n        Emiter.instance.emit('playSoundBackground');\n        Emiter.instance.emit('canInput', true);\n        this._clearBoardGame();\n        this.instanceRandomUnit();\n        this.instanceRandomUnit();\n    },\n\n    _instanceBoardArray() {\n        for (let i = 0; i < this._row; i++) {\n            let rowBoardArg = [];\n            for (let j = 0; j < this._col; j++) rowBoardArg.push(null);\n            this._boardUnitArgs.push(rowBoardArg);\n        }\n    },\n\n    _clearBoardGame() {\n        for (let i = 0; i < this._row; i++) {\n            for (let j = 0; j < this._col; j++) {\n                if (this._boardUnitArgs[i][j] != null) this._boardUnitArgs[i][j].destroyNode();\n                this._boardUnitArgs[i][j] = null;\n            }\n        }\n        this._maxObj = 0;\n        this._playOverPoint = false;\n        this._resetScore();\n    },\n\n    _continuePlayOverPoint() {\n        this._playOverPoint = true;\n    },\n\n    _moveUp() {\n        if (this._canMoveBoard == false) return;\n        this._canMoveBoard = false;\n        for (let y = 0; y < this._col; y++) {\n            for (let x = 0; x < this._row; x++) {\n                let index = this._getIndex(x, y, 'col', 'forward');\n                if (index == x) continue;\n                if (this._boardUnitArgs[x][y] == null) {\n                    this._moveUnitPosition(index, y, x, y);\n                    if (index != y) y--;\n                    continue;\n                }\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[index][y].getUnitValue()) {\n                    this._moveUnitPosition(index, y, x, y);\n                    this._mergeUnit(x, y, index, y);\n                    continue;\n                }\n                this._moveUnitPosition(index, y, x + 1, y);\n            }\n        }\n        this._instanceUnit();\n    },\n\n    _moveDown() {\n        if (this._canMoveBoard == false) return;\n        this._canMoveBoard = false;\n        for (let y = this._col - 1; y >= 0; y--) {\n            for (let x = this._row - 1; x >= 0; x--) {\n                let index = this._getIndex(x, y, 'col', 'backward');\n                if (index == x) continue;\n                if (this._boardUnitArgs[x][y] == null) {\n                    this._moveUnitPosition(index, y, x, y);\n                    if (index != y) y++;\n                    continue;\n                }\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[index][y].getUnitValue()) {\n                    this._moveUnitPosition(index, y, x, y);\n                    this._mergeUnit(x, y, index, y);\n                    continue;\n                }\n                this._moveUnitPosition(index, y, x - 1, y);\n            }\n        }\n        this._instanceUnit();\n    },\n\n    _moveLeft() {\n        if (this._canMoveBoard == false) return;\n        this._canMoveBoard = false;\n        for (let x = 0; x < this._row; x++) {\n            for (let y = 0; y < this._col; y++) {\n                let index = this._getIndex(x, y, 'row', 'forward');\n                if (index == y) continue;\n                if (this._boardUnitArgs[x][y] == null) {\n                    this._moveUnitPosition(x, index, x, y);\n                    if (index != y) y--;\n                    continue;\n                }\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[x][index].getUnitValue()) {\n                    this._moveUnitPosition(x, index, x, y);\n                    this._mergeUnit(x, y, x, index);\n                    continue;\n                }\n                this._moveUnitPosition(x, index, x, y + 1);\n            }\n        }\n        this._instanceUnit();\n    },\n\n    _moveRight() {\n        if (this._canMoveBoard == false) return;\n        this._canMoveBoard = false;\n        for (let x = this._row - 1; x >= 0; x--) {\n            for (let y = this._col - 1; y >= 0; y--) {\n                let index = this._getIndex(x, y, 'row', 'backward');\n                if (index == y) continue;\n                if (this._boardUnitArgs[x][y] == null) {\n                    this._moveUnitPosition(x, index, x, y);\n                    if (index != y) y++;\n                    continue;\n                }\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[x][index].getUnitValue()) {\n                    this._moveUnitPosition(x, index, x, y);\n                    this._mergeUnit(x, y, x, index);\n                    continue;\n                }\n                this._moveUnitPosition(x, index, x, y - 1);\n            }\n        }\n        this._instanceUnit();\n    },\n\n    _moveUnitPosition(currentX, currentY, indexX, indexY) {\n        if (currentX == indexX && currentY == indexY) return;\n        let temp = this._boardUnitArgs[currentX][currentY];\n        this._boardUnitArgs[currentX][currentY] = this._boardUnitArgs[indexX][indexY];\n        this._boardUnitArgs[indexX][indexY] = temp;\n        this._boardUnitArgs[indexX][indexY].moveUnit(this._boardPosition[indexX][indexY]);\n        this._canInstanceUnit = true;\n    },\n\n    _mergeUnit(x, y, indexX, indexY) {\n        Emiter.instance.emit('playSoundAward');\n        let unitPoint = this._boardUnitArgs[x][y].getUnitValue() * 2;\n        this._boardUnitArgs[x][y].setUnitValue(unitPoint);\n        this._boardUnitArgs[indexX][indexY].destroyNode();\n        this._boardUnitArgs[indexX][indexY] = null;\n        this._addScore(this._boardUnitArgs[x][y].getUnitValue());\n        this._maxObj--;\n        if (this._playOverPoint == true) return;\n\n        if (unitPoint >= this._winPoint) Emiter.instance.emit('winGame');\n    },\n\n    _getIndex(x, y, getType, sortType) {\n        let index = null;\n        if (getType == 'row') {\n            index = y;\n            if (sortType == 'forward')\n                for (let i = this._col - 1; i > y; i--) {\n                    if (this._boardUnitArgs[x][i] != null) index = i;\n                }\n            if (sortType == 'backward')\n                for (let i = 0; i < y; i++) {\n                    if (this._boardUnitArgs[x][i] != null) index = i;\n                }\n        }\n        if (getType == 'col') {\n            index = x;\n            if (sortType == 'forward')\n                for (let i = this._row - 1; i > x; i--) {\n                    if (this._boardUnitArgs[i][y] != null) index = i;\n                }\n            if (sortType == 'backward')\n                for (let i = 0; i < x; i++) {\n                    if (this._boardUnitArgs[i][y] != null) index = i;\n                }\n        }\n        return index;\n    },\n\n    _addScore(score) {\n        this.scoreTotal.string = (+score) + (+this.scoreTotal.string);\n        this._updateBestScore();\n    },\n\n    _resetScore() {\n        this.scoreTotal.string = 0;\n        if (cc.sys.localStorage.getItem('BestScore')) {\n            this.bestScore.string = cc.sys.localStorage.getItem('BestScore');\n            return;\n        }\n        this.bestScore.string = 0;\n    },\n\n    _updateBestScore() {\n        if ((+this.scoreTotal.string) > (+this.bestScore.string)) {\n            this.bestScore.string = this.scoreTotal.string;\n            cc.sys.localStorage.setItem('BestScore', (+this.bestScore.string));\n        }\n    },\n});\n"]}