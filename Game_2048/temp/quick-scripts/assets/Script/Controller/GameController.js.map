{"version":3,"sources":["GameController.js"],"names":["Emiter","require","cc","Class","extends","Component","properties","unitBG","Prefab","unitPrefabs","boardUnit","Node","nodeBG","scoreTotal","Label","bestScore","_boardPosition","_boardUnitArgs","_row","_col","_distance","_maxObj","_canMoveBoard","_canInstanceUnit","onLoad","instance","addEvent","_startGameFunc","bind","_moveUp","_moveDown","_moveLeft","_moveRight","instanceBackgroundUnit","_instanceBoardArray","_clearBoardGame","instanceRandomUnit","randX","randY","randomXY","unit","instantiate","addChild","position","setUnitValue","randomValue","Math","floor","random","rand","_instanceUnit","emit","tween","node","delay","call","log","start","i","rowBoard","j","unitPos","v2","push","rowBoardArg","destroyNode","_resetScore","y","x","index","_getIndex","_moveUnitPosition","getUnitValue","_mergeUnit","currentX","currentY","indexX","indexY","temp","moveUnit","_addScore","getType","sortType","score","string","_updateBestScore","sys","localStorage","getItem","setItem"],"mappings":"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","file":"GameController.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Controller","sourcesContent":["const Emiter = require('Emitter');\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        unitBG: cc.Prefab,\r\n        unitPrefabs: cc.Prefab,\r\n        boardUnit: cc.Node,\r\n        nodeBG: cc.Node,\r\n        scoreTotal: cc.Label,\r\n        bestScore: cc.Label,\r\n        _boardPosition: [],\r\n        _boardUnitArgs: [],\r\n        _row: 4,\r\n        _col: 4,\r\n        _distance: 200,\r\n        _maxObj: 0,\r\n        _canMoveBoard: true,\r\n        _canInstanceUnit: false,\r\n    },\r\n\r\n    onLoad() {\r\n        Emiter.instance.addEvent('startGame', this._startGameFunc.bind(this));\r\n\r\n        Emiter.instance.addEvent('moveUp', this._moveUp.bind(this));\r\n        Emiter.instance.addEvent('moveDown', this._moveDown.bind(this));\r\n        Emiter.instance.addEvent('moveLeft', this._moveLeft.bind(this));\r\n        Emiter.instance.addEvent('moveRight', this._moveRight.bind(this));\r\n\r\n        this.instanceBackgroundUnit();\r\n        this._instanceBoardArray();\r\n        this._clearBoardGame();\r\n    },\r\n\r\n    instanceRandomUnit() {\r\n        this._maxObj++;\r\n        if (this._maxObj > (this._row * this._col)) return;\r\n        let randX = 0;\r\n        let randY = 0;\r\n        randomXY();\r\n        while (this._boardUnitArgs[randX][randY] != null) randomXY();\r\n        let unit = cc.instantiate(this.unitPrefabs);\r\n        this._boardUnitArgs[randX][randY] = unit;\r\n        this.boardUnit.addChild(unit);\r\n        unit.position = this._boardPosition[randX][randY];\r\n        unit.setUnitValue(randomValue());\r\n\r\n        function randomXY() {\r\n            randX = Math.floor(Math.random() * 4);\r\n            randY = Math.floor(Math.random() * 4);\r\n        }\r\n        function randomValue() {\r\n            let rand = Math.random();\r\n            rand > 0.5 ? rand = 4 : rand = 2;\r\n            return rand;\r\n        }\r\n    },\r\n\r\n    _instanceUnit() {\r\n        Emiter.instance.emit('playSoundSlide');\r\n        cc.tween(this.node).delay(0.15).call(() => {\r\n            this._canMoveBoard = true;\r\n            if (this._maxObj >= 16 && this._canInstanceUnit == false) {\r\n                cc.log('end Game');\r\n            }\r\n            if (this._canInstanceUnit == false) return;\r\n            this._canInstanceUnit = false;\r\n            this.instanceRandomUnit();\r\n        }).start();\r\n    },\r\n\r\n    instanceBackgroundUnit() {\r\n        for (let i = 1; i <= this._row; i++) {\r\n            let rowBoard = [];\r\n            for (let j = 1; j <= this._col; j++) {\r\n                let unit = cc.instantiate(this.unitBG);\r\n                let unitPos = cc.v2(((j - (this._col + 1) / 2) * this._distance), -((i - (this._row + 1) / 2) * this._distance))\r\n                unit.position = unitPos;\r\n                rowBoard.push(unitPos);\r\n                this.nodeBG.addChild(unit);\r\n            }\r\n            this._boardPosition.push(rowBoard);\r\n        }\r\n    },\r\n\r\n    _startGameFunc() {\r\n        Emiter.instance.emit('playSoundClick');\r\n        this._clearBoardGame();\r\n        this.instanceRandomUnit();\r\n        this.instanceRandomUnit();\r\n    },\r\n\r\n    _instanceBoardArray() {\r\n        for (let i = 0; i < this._row; i++) {\r\n            let rowBoardArg = [];\r\n            for (let j = 0; j < this._col; j++) rowBoardArg.push(null);\r\n            this._boardUnitArgs.push(rowBoardArg);\r\n        }\r\n    },\r\n\r\n    _clearBoardGame() {\r\n        for (let i = 0; i < this._row; i++) {\r\n            for (let j = 0; j < this._col; j++) {\r\n                if (this._boardUnitArgs[i][j] != null) this._boardUnitArgs[i][j].destroyNode();\r\n                this._boardUnitArgs[i][j] = null;\r\n            }\r\n        }\r\n        this._maxObj = 0;\r\n        this._resetScore();\r\n    },\r\n\r\n    _moveUp() {\r\n        if (this._canMoveBoard == false) return;\r\n        this._canMoveBoard = false;\r\n        for (let y = 0; y < this._col; y++) {\r\n            for (let x = 0; x < this._row; x++) {\r\n                let index = this._getIndex(x, y, 'col', 'forward');\r\n                if (index == x) continue;\r\n                if (this._boardUnitArgs[x][y] == null) {\r\n                    this._moveUnitPosition(index, y, x, y);\r\n                    if (index != y) y--;\r\n                    continue;\r\n                }\r\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[index][y].getUnitValue()) {\r\n                    this._moveUnitPosition(index, y, x, y);\r\n                    this._mergeUnit(x, y, index, y);\r\n                    continue;\r\n                }\r\n                this._moveUnitPosition(index, y, x + 1, y);\r\n            }\r\n        }\r\n        this._instanceUnit();\r\n    },\r\n\r\n    _moveDown() {\r\n        if (this._canMoveBoard == false) return;\r\n        this._canMoveBoard = false;\r\n        for (let y = this._col - 1; y >= 0; y--) {\r\n            for (let x = this._row - 1; x >= 0; x--) {\r\n                let index = this._getIndex(x, y, 'col', 'backward');\r\n                if (index == x) continue;\r\n                if (this._boardUnitArgs[x][y] == null) {\r\n                    this._moveUnitPosition(index, y, x, y);\r\n                    if (index != y) y++;\r\n                    continue;\r\n                }\r\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[index][y].getUnitValue()) {\r\n                    this._moveUnitPosition(index, y, x, y);\r\n                    this._mergeUnit(x, y, index, y);\r\n                    continue;\r\n                }\r\n                this._moveUnitPosition(index, y, x - 1, y);\r\n            }\r\n        }\r\n        this._instanceUnit();\r\n    },\r\n\r\n    _moveLeft() {\r\n        if (this._canMoveBoard == false) return;\r\n        this._canMoveBoard = false;\r\n        for (let x = 0; x < this._row; x++) {\r\n            for (let y = 0; y < this._col; y++) {\r\n                let index = this._getIndex(x, y, 'row', 'forward');\r\n                if (index == y) continue;\r\n                if (this._boardUnitArgs[x][y] == null) {\r\n                    this._moveUnitPosition(x, index, x, y);\r\n                    if (index != y) y--;\r\n                    continue;\r\n                }\r\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[x][index].getUnitValue()) {\r\n                    this._moveUnitPosition(x, index, x, y);\r\n                    this._mergeUnit(x, y, x, index);\r\n                    continue;\r\n                }\r\n                this._moveUnitPosition(x, index, x, y + 1);\r\n            }\r\n        }\r\n        this._instanceUnit();\r\n    },\r\n\r\n    _moveRight() {\r\n        if (this._canMoveBoard == false) return;\r\n        this._canMoveBoard = false;\r\n        for (let x = this._row - 1; x >= 0; x--) {\r\n            for (let y = this._col - 1; y >= 0; y--) {\r\n                let index = this._getIndex(x, y, 'row', 'backward');\r\n                if (index == y) continue;\r\n                if (this._boardUnitArgs[x][y] == null) {\r\n                    this._moveUnitPosition(x, index, x, y);\r\n                    if (index != y) y++;\r\n                    continue;\r\n                }\r\n                if (this._boardUnitArgs[x][y].getUnitValue() == this._boardUnitArgs[x][index].getUnitValue()) {\r\n                    this._moveUnitPosition(x, index, x, y);\r\n                    this._mergeUnit(x, y, x, index);\r\n                    continue;\r\n                }\r\n                this._moveUnitPosition(x, index, x, y - 1);\r\n            }\r\n        }\r\n        this._instanceUnit();\r\n    },\r\n\r\n    _moveUnitPosition(currentX, currentY, indexX, indexY) {\r\n        if (currentX == indexX && currentY == indexY) return;\r\n        let temp = this._boardUnitArgs[currentX][currentY];\r\n        this._boardUnitArgs[currentX][currentY] = this._boardUnitArgs[indexX][indexY];\r\n        this._boardUnitArgs[indexX][indexY] = temp;\r\n        this._boardUnitArgs[indexX][indexY].moveUnit(this._boardPosition[indexX][indexY]);\r\n        this._canInstanceUnit = true;\r\n    },\r\n\r\n    _mergeUnit(x, y, indexX, indexY) {\r\n        Emiter.instance.emit('playSoundAward');\r\n        this._boardUnitArgs[x][y].setUnitValue(this._boardUnitArgs[x][y].getUnitValue() * 2);\r\n        this._boardUnitArgs[indexX][indexY].destroyNode();\r\n        this._boardUnitArgs[indexX][indexY] = null;\r\n        this._addScore(this._boardUnitArgs[x][y].getUnitValue());\r\n        this._maxObj--;\r\n    },\r\n\r\n    _getIndex(x, y, getType, sortType) {\r\n        let index = null;\r\n        if (getType == 'row') {\r\n            index = y;\r\n            if (sortType == 'forward')\r\n                for (let i = this._col - 1; i > y; i--) {\r\n                    if (this._boardUnitArgs[x][i] != null) index = i;\r\n                }\r\n            if (sortType == 'backward')\r\n                for (let i = 0; i < y; i++) {\r\n                    if (this._boardUnitArgs[x][i] != null) index = i;\r\n                }\r\n        }\r\n        if (getType == 'col') {\r\n            index = x;\r\n            if (sortType == 'forward')\r\n                for (let i = this._row - 1; i > x; i--) {\r\n                    if (this._boardUnitArgs[i][y] != null) index = i;\r\n                }\r\n            if (sortType == 'backward')\r\n                for (let i = 0; i < x; i++) {\r\n                    if (this._boardUnitArgs[i][y] != null) index = i;\r\n                }\r\n        }\r\n        return index;\r\n    },\r\n\r\n    _addScore(score) {\r\n        this.scoreTotal.string = (+score) + (+this.scoreTotal.string);\r\n        this._updateBestScore();\r\n    },\r\n\r\n    _resetScore() {\r\n        this.scoreTotal.string = 0;\r\n        if (cc.sys.localStorage.getItem('BestScore')) {\r\n            this.bestScore.string = cc.sys.localStorage.getItem('BestScore');\r\n            return;\r\n        }\r\n        this.bestScore.string = 0;\r\n    },\r\n\r\n    _updateBestScore() {\r\n        if ((+this.scoreTotal.string) > (+this.bestScore.string)) {\r\n            this.bestScore.string = this.scoreTotal.string;\r\n            cc.sys.localStorage.setItem('BestScore', (+this.bestScore.string));\r\n        }\r\n    },\r\n});\r\n"]}