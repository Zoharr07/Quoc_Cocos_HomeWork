{"version":3,"sources":["ButtonController.js"],"names":["Emiter","require","cc","Class","extends","Component","properties","leftBtn","Button","rightBtn","jumpBtn","resetBtn","ccCheckBox","Toggle","tweenCheckBox","onLoad","instance","addEvent","_setBtnInteracctable","bind","node","on","emit","_goLeftBtnFunc","_goRightBtnFunc","_jumpBtnFunc","_resetCharBtnFunc","start","isChecked","isInteractable","interactable"],"mappings":";;;;;;AAAA,IAAMA,SAASC,QAAQ,SAAR,CAAf;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;AAELC,gBAAY;AACRC,iBAASL,GAAGM,MADJ;AAERC,kBAAUP,GAAGM,MAFL;AAGRE,iBAASR,GAAGM,MAHJ;AAIRG,kBAAUT,GAAGM,MAJL;AAKRI,oBAAYV,GAAGW,MALP;AAMRC,uBAAeZ,GAAGW;AANV,KAFP;;AAWLE,UAXK,oBAWI;AACLf,eAAOgB,QAAP,CAAgBC,QAAhB,CAAyB,WAAzB,EAAsC,KAAKC,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAAtC;;AAEA,aAAKP,UAAL,CAAgBQ,IAAhB,CAAqBC,EAArB,CAAwB,QAAxB,EAAkC,YAAM;AAAErB,mBAAOgB,QAAP,CAAgBM,IAAhB,CAAqB,cAArB,EAAqC,UAArC;AAAmD,SAA7F;AACA,aAAKR,aAAL,CAAmBM,IAAnB,CAAwBC,EAAxB,CAA2B,QAA3B,EAAqC,YAAM;AAAErB,mBAAOgB,QAAP,CAAgBM,IAAhB,CAAqB,cAArB,EAAqC,aAArC;AAAsD,SAAnG;;AAEA,aAAKf,OAAL,CAAaa,IAAb,CAAkBC,EAAlB,CAAqB,OAArB,EAA8B,KAAKE,cAAnC,EAAmD,IAAnD;AACA,aAAKd,QAAL,CAAcW,IAAd,CAAmBC,EAAnB,CAAsB,OAAtB,EAA+B,KAAKG,eAApC,EAAqD,IAArD;AACA,aAAKd,OAAL,CAAaU,IAAb,CAAkBC,EAAlB,CAAqB,OAArB,EAA8B,KAAKI,YAAnC,EAAiD,IAAjD;AACA,aAAKd,QAAL,CAAcS,IAAd,CAAmBC,EAAnB,CAAsB,OAAtB,EAA+B,KAAKK,iBAApC,EAAuD,IAAvD;AACH,KArBI;AAsBLC,SAtBK,mBAsBG;AACJ,aAAKf,UAAL,CAAgBgB,SAAhB,GAA4B,IAA5B;AACA5B,eAAOgB,QAAP,CAAgBM,IAAhB,CAAqB,cAArB,EAAqC,UAArC;AACH,KAzBI;AA2BLC,kBA3BK,4BA2BY;AACbvB,eAAOgB,QAAP,CAAgBM,IAAhB,CAAqB,QAArB;AACH,KA7BI;AA+BLE,mBA/BK,6BA+Ba;AACdxB,eAAOgB,QAAP,CAAgBM,IAAhB,CAAqB,SAArB;AACH,KAjCI;AAmCLG,gBAnCK,0BAmCU;AACXzB,eAAOgB,QAAP,CAAgBM,IAAhB,CAAqB,MAArB;AACH,KArCI;AAuCLI,qBAvCK,+BAuCe;AAChB1B,eAAOgB,QAAP,CAAgBM,IAAhB,CAAqB,OAArB;AACH,KAzCI;AA2CLJ,wBA3CK,gCA2CgBW,cA3ChB,EA2CgC;AACjC,aAAKtB,OAAL,CAAauB,YAAb,GAA4BD,cAA5B;AACA,aAAKpB,QAAL,CAAcqB,YAAd,GAA6BD,cAA7B;AACA,aAAKnB,OAAL,CAAaoB,YAAb,GAA4BD,cAA5B;AACH;AA/CI,CAAT","file":"ButtonController.js","sourceRoot":"../../../../assets/Scripts","sourcesContent":["const Emiter = require('Emitter');\n\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        leftBtn: cc.Button,\n        rightBtn: cc.Button,\n        jumpBtn: cc.Button,\n        resetBtn: cc.Button,\n        ccCheckBox: cc.Toggle,\n        tweenCheckBox: cc.Toggle,\n    },\n\n    onLoad() {\n        Emiter.instance.addEvent('setbutton', this._setBtnInteracctable.bind(this));\n\n        this.ccCheckBox.node.on('toggle', () => { Emiter.instance.emit(\"changeAction\", 'CCAction'); });\n        this.tweenCheckBox.node.on('toggle', () => { Emiter.instance.emit(\"changeAction\", 'TweenAction'); });\n\n        this.leftBtn.node.on('click', this._goLeftBtnFunc, this);\n        this.rightBtn.node.on('click', this._goRightBtnFunc, this);\n        this.jumpBtn.node.on('click', this._jumpBtnFunc, this);\n        this.resetBtn.node.on('click', this._resetCharBtnFunc, this);\n    },\n    start() {\n        this.ccCheckBox.isChecked = true;\n        Emiter.instance.emit(\"changeAction\", 'CCAction');\n    },\n\n    _goLeftBtnFunc() {\n        Emiter.instance.emit('goleft');\n    },\n\n    _goRightBtnFunc() {\n        Emiter.instance.emit('goright');\n    },\n\n    _jumpBtnFunc() {\n        Emiter.instance.emit('jump');\n    },\n\n    _resetCharBtnFunc() {\n        Emiter.instance.emit('reset');\n    },\n\n    _setBtnInteracctable(isInteractable) {\n        this.leftBtn.interactable = isInteractable;\n        this.rightBtn.interactable = isInteractable;\n        this.jumpBtn.interactable = isInteractable;\n    }\n});\n"]}