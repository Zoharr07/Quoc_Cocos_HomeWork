{"version":3,"sources":["KeyboardController.js"],"names":["Emiter","require","cc","Class","extends","Component","properties","_canGetKey","onLoad","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","instance","addEvent","_setInputStatus","bind","event","keyCode","macro","KEY","left","console","log","emit","right","space","escape","canGetKey"],"mappings":";;;;;;AAAA,IAAMA,SAASC,QAAQ,SAAR,CAAf;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;AAELC,gBAAY;AACRC,oBAAY;AADJ,KAFP;;AAMLC,UANK,oBAMI;AACLN,WAAGO,WAAH,CAAeC,EAAf,CAAkBR,GAAGS,WAAH,CAAeC,SAAf,CAAyBC,QAA3C,EAAqD,KAAKC,SAA1D,EAAqE,IAArE;AACAd,eAAOe,QAAP,CAAgBC,QAAhB,CAAyB,aAAzB,EAAwC,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAxC;AACH,KATI;AAWLJ,aAXK,qBAWKK,KAXL,EAWY;AACb,YAAI,CAAC,KAAKZ,UAAV,EAAsB;AACtB,gBAAQY,MAAMC,OAAd;AACI,iBAAKlB,GAAGmB,KAAH,CAASC,GAAT,CAAaC,IAAlB;AACIC,wBAAQC,GAAR,CAAY,gBAAZ;AACAzB,uBAAOe,QAAP,CAAgBW,IAAhB,CAAqB,QAArB;AACA;AACJ,iBAAKxB,GAAGmB,KAAH,CAASC,GAAT,CAAaK,KAAlB;AACIH,wBAAQC,GAAR,CAAY,iBAAZ;AACAzB,uBAAOe,QAAP,CAAgBW,IAAhB,CAAqB,SAArB;AACA;AACJ,iBAAKxB,GAAGmB,KAAH,CAASC,GAAT,CAAaM,KAAlB;AACIJ,wBAAQC,GAAR,CAAY,iBAAZ;AACAzB,uBAAOe,QAAP,CAAgBW,IAAhB,CAAqB,MAArB;AACA;AACJ,iBAAKxB,GAAGmB,KAAH,CAASC,GAAT,CAAaO,MAAlB;AACIL,wBAAQC,GAAR,CAAY,eAAZ;AACAzB,uBAAOe,QAAP,CAAgBW,IAAhB,CAAqB,OAArB;AACA;AAhBR;AAkBH,KA/BI;AAiCLT,mBAjCK,2BAiCWa,SAjCX,EAiCsB;AACvB,aAAKvB,UAAL,GAAkBuB,SAAlB;AACA5B,WAAGuB,GAAH,CAAO,KAAKlB,UAAZ;AACH;AApCI,CAAT","file":"KeyboardController.js","sourceRoot":"../../../../assets/Scripts","sourcesContent":["const Emiter = require('Emitter');\n\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        _canGetKey: true,\n    },\n\n    onLoad() {\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this)\n        Emiter.instance.addEvent('inputstatus', this._setInputStatus.bind(this))\n    },\n\n    onKeyDown(event) {\n        if (!this._canGetKey) return;\n        switch (event.keyCode) {\n            case cc.macro.KEY.left:\n                console.log('Press left key');\n                Emiter.instance.emit('goleft');\n                break;\n            case cc.macro.KEY.right:\n                console.log('Press right key');\n                Emiter.instance.emit('goright');\n                break;\n            case cc.macro.KEY.space:\n                console.log('Press space key');\n                Emiter.instance.emit('jump');\n                break;\n            case cc.macro.KEY.escape:\n                console.log('Press esc key');\n                Emiter.instance.emit('reset');\n                break;\n        }\n    },\n\n    _setInputStatus(canGetKey) {\n        this._canGetKey = canGetKey;\n        cc.log(this._canGetKey)\n    }\n});\n"]}